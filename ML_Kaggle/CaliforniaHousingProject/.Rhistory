anova(baseline, mlModel)
### post hoc test
postHocs <- glht(mlModel, linfct = mcp(EXPERIMENT_STAGE_REF_ID = "Tukey"))
summary(postHocs)
confint(postHocs)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
View(head(yldData))
str(yldData)
# Correcting variable type
yldData[, c(1:8, 10, 11)] <- lapply(yldData[, c(1:8, 10, 11)], factor)
yldData$EXPERIMENT_STAGE_REF_ID <- factor(yldData$EXPERIMENT_STAGE_REF_ID, levels = c("P1", "P2", "P3", "P4", "MD"))
# Identifying products which are common in P1 - MD stages
prodPipeline <- yldData %>%
group_by(ME, HARVEST_YEAR1, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(LOCTested = n())
prodPipeline <- prodPipeline %>%
filter(ME != "NA")
prodPipeline <- spread(prodPipeline, key = EXPERIMENT_STAGE_REF_ID, LOCTested)
prodPipeline <- prodPipeline %>%
filter(!is.na(MD) & !is.na(P4) & !is.na(P3) & !is.na(P2) & !is.na(P1)) %>%
arrange(ME, HARVEST_YEAR1)
prodPipeline
### Exploratory Data Analysis ------------------------------------
data2018ME1 <- yldData %>% filter(ME == "ME1", HARVEST_YEAR1 == 2018, PRODUCT_NAME %in% c("DKC9133", "DKC8161", "DKC9141", "NK6240", "P3401", "P3501", "S 6668"))
View(data2018ME1)
data2018ME1 %>% group_by()
summary(data2018ME1)
str(data2018ME1)
# Data exploration
# descriptive stat
options(scipen = 999)
by(data2018ME1$YLD_BE, data2018ME1$EXPERIMENT_STAGE_REF_ID, stat.desc)
# Visual data exploration
# Density plot
ggplot(data2018ME1 %>% filter(EXPERIMENT_STAGE_REF_ID == "P4"), aes(YLD_BE))+
geom_density()+
scale_x_continuous(breaks = seq(0, 150, 10))
# Mean YLD_BE accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
stat_summary(fun.y = mean, geom = "bar")+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .1, colour = "red")
# Mean YLD_BE and trend accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
geom_jitter(width = .1, alpha = .1, size = 1)+
stat_summary(fun.y = mean, geom = "point", size = 5, color = "red")+
stat_summary(fun.y = median, group = 1, geom = "line", linetype = "dashed", size = 1,  colour = "blue")
# Product wise YLD_BE in different experiment stages
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(PRODUCT_NAME, YLD_BE, color = EXPERIMENT_STAGE_REF_ID))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge")+
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = .9, aes(group = EXPERIMENT_STAGE_REF_ID), position = "dodge" )
# Product performance trend accross stages
ggplot(data2018ME1 %>% filter(YLD_BE >= 40 & YLD_BE <= 150), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE, colour = PRODUCT_NAME))+
stat_summary(fun.y = mean, geom = "point", size = 3)+
# stat_summary(fun.data = mean_cl_normal, geom = "errorbar", aes(group = PRODUCT_NAME), position = "dodge", width = .9)+
stat_summary(fun.y = mean, geom = "line", size = 1, aes(group = PRODUCT_NAME))
### Repeated Measure One Way ANOVA -------------------------
# Choosing contrasts
P1.2.3.4_MD <- c(1, 1, 1, 1, -4)
P1.2.3_P4.MD <- c(2, 2, 2, -3, -3)
P1.2_P3.4.MD    <- c(3, 3, -2, -2, -2)
P1.2_P3.4 <- c(1, 1, -1, 1, 0)
P3_P4 <- c(0, 0, 1, -1, 0)
P3_MD <- c(0, 0, 1, 0, -1)
P4_MD <- c(0, 0, 0, 1, -1)
contrasts(data2018ME1$EXPERIMENT_STAGE_REF_ID) <- cbind(P1.2.3.4_MD, P1.2.3_P4.MD, P1.2_P3.4.MD, P1.2_P3.4, P3_P4, P3_MD, P4_MD)
data2018ME1$EXPERIMENT_STAGE_REF_ID
# ANOVA - easy ANOVA
ezyModel <- ezANOVA(data = data2018ME1
, dv = .(YLD_BE)
, wid = .(PRODUCT_NAME)
, within = .(EXPERIMENT_STAGE_REF_ID)
, detailed = TRUE
, type = 3)
ezyModel
# Trend analysis
contrasts(data2018ME1$EXPERIMENT_STAGE_REF_ID) <- contr.poly(5)
yldTrend <- aov(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, data = data2018ME1)
summary.lm(yldTrend)
# post hoc test
# Calculating means for accross experimental stage and accross products for paired t test
meanData2018ME1  <-  data2018ME1 %>% group_by(EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(meanYLD = mean(YLD_BE))
# post hoc test - Bonferroni
pairwise.t.test(meanData2018ME1$meanYLD, meanData2018ME1$EXPERIMENT_STAGE_REF_ID, paired = TRUE, p.adjust.method = "bonferroni")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
summary(mlModel)
baseline <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
anova(baseline, mlModel)
### post hoc test
postHocs <- glht(mlModel, linfct = mcp(EXPERIMENT_STAGE_REF_ID = "Tukey"))
summary(postHocs)
confint(postHocs)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
View(head(yldData))
str(yldData)
# Correcting variable type
yldData[, c(1:8, 10, 11)] <- lapply(yldData[, c(1:8, 10, 11)], factor)
yldData$EXPERIMENT_STAGE_REF_ID <- factor(yldData$EXPERIMENT_STAGE_REF_ID, levels = c("P1", "P2", "P3", "P4", "MD"))
# Identifying products which are common in P1 - MD stages
prodPipeline <- yldData %>%
group_by(ME, HARVEST_YEAR1, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(LOCTested = n())
prodPipeline <- prodPipeline %>%
filter(ME != "NA")
prodPipeline <- spread(prodPipeline, key = EXPERIMENT_STAGE_REF_ID, LOCTested)
prodPipeline <- prodPipeline %>%
filter(!is.na(MD) & !is.na(P4) & !is.na(P3) & !is.na(P2) & !is.na(P1)) %>%
arrange(ME, HARVEST_YEAR1)
prodPipeline
### Exploratory Data Analysis ------------------------------------
data2018ME1 <- yldData %>% filter(ME == "ME1", HARVEST_YEAR1 == 2018, PRODUCT_NAME %in% c("DKC9133", "DKC8161", "DKC9141", "NK6240", "P3401", "P3501", "S 6668"))
View(data2018ME1)
data2018ME1 %>% group_by()
summary(data2018ME1)
str(data2018ME1)
# Data exploration
# descriptive stat
options(scipen = 999)
by(data2018ME1$YLD_BE, data2018ME1$EXPERIMENT_STAGE_REF_ID, stat.desc)
# Visual data exploration
# Density plot
ggplot(data2018ME1 %>% filter(EXPERIMENT_STAGE_REF_ID == "P4"), aes(YLD_BE))+
geom_density()+
scale_x_continuous(breaks = seq(0, 150, 10))
# Mean YLD_BE accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
stat_summary(fun.y = mean, geom = "bar")+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .1, colour = "red")
# Mean YLD_BE and trend accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
geom_jitter(width = .1, alpha = .1, size = 1)+
stat_summary(fun.y = mean, geom = "point", size = 5, color = "red")+
stat_summary(fun.y = median, group = 1, geom = "line", linetype = "dashed", size = 1,  colour = "blue")
# Product wise YLD_BE in different experiment stages
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(PRODUCT_NAME, YLD_BE, color = EXPERIMENT_STAGE_REF_ID))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge")+
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = .9, aes(group = EXPERIMENT_STAGE_REF_ID), position = "dodge" )
# Product performance trend accross stages
ggplot(data2018ME1 %>% filter(YLD_BE >= 40 & YLD_BE <= 150), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE, colour = PRODUCT_NAME))+
stat_summary(fun.y = mean, geom = "point", size = 3)+
# stat_summary(fun.data = mean_cl_normal, geom = "errorbar", aes(group = PRODUCT_NAME), position = "dodge", width = .9)+
stat_summary(fun.y = mean, geom = "line", size = 1, aes(group = PRODUCT_NAME))
### Repeated Measure One Way ANOVA -------------------------
# Choosing contrasts
P1.2.3.4_MD <- c(1, 1, 1, 1, -4)
P1.2.3_P4.MD <- c(2, 2, 2, -3, -3)
P1.2_P3.4.MD    <- c(3, 3, -2, -2, -2)
P1.2_P3.4 <- c(1, 1, -1, 1, 0)
P3_P4 <- c(0, 0, 1, -1, 0)
P3_MD <- c(0, 0, 1, 0, -1)
P4_MD <- c(0, 0, 0, 1, -1)
contrasts(data2018ME1$EXPERIMENT_STAGE_REF_ID) <- cbind(P1.2.3.4_MD, P1.2.3_P4.MD, P1.2_P3.4.MD, P1.2_P3.4, P3_P4, P3_MD, P4_MD)
data2018ME1$EXPERIMENT_STAGE_REF_ID
# ANOVA - easy ANOVA
ezyModel <- ezANOVA(data = data2018ME1
, dv = .(YLD_BE)
, wid = .(PRODUCT_NAME)
, within = .(EXPERIMENT_STAGE_REF_ID)
, detailed = TRUE
, type = 3)
ezyModel
# Trend analysis
contrasts(data2018ME1$EXPERIMENT_STAGE_REF_ID) <- contr.poly(5)
yldTrend <- aov(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, data = data2018ME1)
summary.lm(yldTrend)
# post hoc test
# Calculating means for accross experimental stage and accross products for paired t test
meanData2018ME1  <-  data2018ME1 %>% group_by(EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(meanYLD = mean(YLD_BE))
# post hoc test - Bonferroni
pairwise.t.test(meanData2018ME1$meanYLD, meanData2018ME1$EXPERIMENT_STAGE_REF_ID, paired = TRUE, p.adjust.method = "bonferroni")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
summary(mlModel)
baseline <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
anova(baseline, mlModel)
### post hoc test
postHocs <- glht(mlModel, linfct = mcp(EXPERIMENT_STAGE_REF_ID = "Tukey"))
summary(postHocs)
confint(postHocs)
summary(mlModel)
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
summary(mlModel)
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Correcting variable type
yldData[, c(1:8, 10, 11)] <- lapply(yldData[, c(1:8, 10, 11)], factor)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
library(readxl)
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
library(magrittr) # for %>%
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
library(magrittr) # for %>%
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
library(dplyr)
library(tidyverse)
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Mean YLD_BE accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
stat_summary(fun.y = mean, geom = "bar")+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .1, colour = "red")
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(tidyverse)
library(dplyr)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Mean YLD_BE accross pipeline
ggplot(data2018ME1 %>% filter(YLD_BE >= 60 & YLD_BE <= 130), aes(EXPERIMENT_STAGE_REF_ID, YLD_BE))+
stat_summary(fun.y = mean, geom = "bar")+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .1, colour = "red")
ezyModel
print(paste("r = ", r))
r <- sqrt(t^2/(t^ + df))
### Effect size measurement -------------------------------
rcontrast <- function(t, df){
r <- sqrt(t^2/(t^ + df))
print(paste("r = ", r))
}
### ezANOVA - easy ANOVA
ezyModel <- ezANOVA(data = data2018ME1
, dv = .(YLD_BE)
, wid = .(PRODUCT_NAME)
, within = .(EXPERIMENT_STAGE_REF_ID)
, detailed = TRUE
, type = 3)
ezyModel
summary.connection(mlModel)
summary(mlModel)
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
summary(mlModel)
# Choosing contrasts
P1.2.3.4_MD <- c(1, 1, 1, 1, -4)
P1.2.3_P4.MD <- c(2, 2, 2, -3, -3)
P1.2_P3.4.MD    <- c(3, 3, -2, -2, -2)
P1.2_P3.4 <- c(1, 1, -1, 1, 0)
P3_P4 <- c(0, 0, 1, -1, 0)
P3_MD <- c(0, 0, 1, 0, -1)
P4_MD <- c(0, 0, 0, 1, -1)
contrasts(data2018ME1$EXPERIMENT_STAGE_REF_ID) <- cbind(P1.2.3.4_MD, P1.2.3_P4.MD, P1.2_P3.4.MD, P1.2_P3.4, P3_P4, P3_MD, P4_MD)
data2018ME1$EXPERIMENT_STAGE_REF_ID
### ezANOVA - easy ANOVA
ezyModel <- ezANOVA(data = data2018ME1
, dv = .(YLD_BE)
, wid = .(PRODUCT_NAME)
, within = .(EXPERIMENT_STAGE_REF_ID)
, detailed = TRUE
, type = 3)
ezyModel
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
summary(mlModel)
# post hoc test
# Calculating means for accross experimental stage and accross products for paired t test
meanData2018ME1  <-  data2018ME1 %>% group_by(EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(meanYLD = mean(YLD_BE))
# post hoc test - Bonferroni
pairwise.t.test(meanData2018ME1$meanYLD, meanData2018ME1$EXPERIMENT_STAGE_REF_ID, paired = TRUE, p.adjust.method = "bonferroni")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID
, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID
, data = meanData2018ME1
, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID
, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID
, data = meanData2018ME1
, method = "ML")
View(data2018ME1)
summary
str(data2018ME1)
library(nlme) # multilevel ANOVA
mlModel <- lme()
library(nlme) # multilevel ANOVA
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID)
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
data2018ME1$EXPERIMENT_STAGE_REF_ID
baseline <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(YLD_BE ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
control$niterEM
View(meanData2018ME1)
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1)# , method = "ML")
baseline <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
library(nlme)
baseline <- lme(YLD_BE ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = data2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
library(magrittr) # for %>%
library(tidyverse)
### Required package
library(readxl)
library(dplyr)
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
### ezANOVA - easy ANOVA
ezyModel <- ezANOVA(data = data2018ME1
, dv = .(YLD_BE)
, wid = .(PRODUCT_NAME)
, within = .(EXPERIMENT_STAGE_REF_ID)
, detailed = TRUE
, type = 3)
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ 1, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
summary(mlModel)
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
summary(data2018ME1$EXPERIMENT_STAGE_REF_ID)
# post hoc test
# Calculating means for accross experimental stage and accross products for paired t test
meanData2018ME1  <-  data2018ME1 %>% group_by(EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME) %>% summarise(meanYLD = mean(YLD_BE))
summary(meanData2018ME1$EXPERIMENT_STAGE_REF_ID)
colnames(meanData2018ME1)
### Multilevel Approach -----------------------------------
mlModel <- lme(meanYLD ~ EXPERIMENT_STAGE_REF_ID, random = ~1|PRODUCT_NAME/EXPERIMENT_STAGE_REF_ID, data = meanData2018ME1, method = "ML")
str(meanData2018ME1$EXPERIMENT_STAGE_REF_ID)
### Required package
library(readxl)
library(tidyverse)
library(dplyr)
library(magrittr) # for %>%
library(reshape)
library(pastecs) # descriptive stat
library(ggplot2)
library(ez) # ANOVA
library(nlme) # multilevel ANOVA
library(multcomp) # for post hoc test
# Product shortlisting for analysis. Identifying same products accross pipeline in a given year
### Load data
yldData <- read_excel(path = "C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/YLD_vs_ProdPerformance/YLD_Data_India_2013-2019.xlsx", sheet = 1)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
# Select required columns
yldData <- yldData %>% select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
yldData %>% select(ME)
install.packages(tidyverse)
library(tidyverse)
library(dplyr)
yldData %>% select(ME)
select(yldData, ME)
View(yldData)
select(yldData, FIELD_NAME : ME)
select(yldData, c("ME"))
# Select required columns
yldData <- yldData %>% dplyr::select(ME, GROWING_PROGRAM_REF_ID, TEST_SET_SEASON, HARVEST_YEAR1, EXPERIMENT_STAGE_NAME, EXPERIMENT_STAGE_REF_ID, PRODUCT_NAME, REP_NUMBER, YLD_BE, SUB_COUNTRY_NAME, SUB_SUB_COUNTRY_NAME)
install.packages("boot")
install.packages("QuantPsyc")
### REquired Packages
lapply(list(c("car", "boot", "QuantPsyc"), library))
### REquired Packages
lapply(list(c("car", "boot", "QuantPsyc"), library()))
### REquired Packages
library(car) # reg disgonistics
library(boot) # bootstrap sampling
library(QuantPsyc) # reg coef
setwd("C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Documents/DataScienceAnalytics/ML_Kaggle/CaliforniaHousingProject")
getwd()
### Data upload
housingDara <- read.csv("housingRegtrain.csv")
### Data upload
housingData <- read.csv("housingRegtrain.csv")
memory.size()
memory.profile()
memory.limit()
memory.limit(size = 2500)
memory.size()
memory.size()
gc()
memory.size()
### Linear Regression Analysis
# Partha Banerjee, 06 June, 2019
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
### Data upload
housingData <- read.csv("housingRegtrain.csv")
### Data Exploration ---------------------
summary(housingData)
View(housingData)
### Data upload
housingData <- read.csv("housingRegtrain.csv", row.names = "id")
### Data upload
housingData <- read.csv("housingRegtrain.csv", row.names = "Id")
read.delim()
INDIA_Corn_ME5_DRY_SOUTH_T_2016.2018_UNCOR_blup_G_2019.06.03 <- read.delim("C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/INDIA_Corn_ME5_DRY_SOUTH_T_2016-2018_UNCOR_blup_G_2019-06-03.txt", header=FALSE)
View(INDIA_Corn_ME5_DRY_SOUTH_T_2016.2018_UNCOR_blup_G_2019.06.03)
read.delim("C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/INDIA_Corn_ME5_DRY_SOUTH_T_2016-2018_UNCOR_blup_G_2019-06-03.txt")
INDIA_Corn_ME5_DRY_SOUTH_T_2016.2018_UNCOR_blup_G_2019.06.03 <- read.delim("C:/Users/PBANE/OneDrive - Monsanto/Migrated from My PC/Desktop/Working/INDIA_Corn_ME5_DRY_SOUTH_T_2016-2018_UNCOR_blup_G_2019-06-03.txt")
write.csv(INDIA_Corn_ME5_DRY_SOUTH_T_2016.2018_UNCOR_blup_G_2019.06.03, "INDIA_Corn_ME5_DRY_SOUTH_T_2016.2018_UNCOR_blup_G_2019.06.03.csv")
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
### Data upload
housingData <- read.csv("housingRegtrain.csv", row.names = "Id")
### Data Exploration ---------------------
summary(housingData)
INDIA_Corn_ME4_DRY_EAST_ST_2017.2019_UNCOR_blup_G_2019.05.29 <- read.delim("C:/Users/PBANE/Downloads/INDIA_Corn_ME4_DRY_EAST_ST_2017-2019_UNCOR_blup_G_2019-05-29.txt")
View(INDIA_Corn_ME4_DRY_EAST_ST_2017.2019_UNCOR_blup_G_2019.05.29)
### Data upload
housingData <- read.csv("housingRegtrain.csv", row.names = "Id")
str(housingData)
